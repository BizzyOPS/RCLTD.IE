{
  "name": "robotics-control-security-server",
  "version": "1.0.0",
  "type": "module",
  "description": "Enterprise security-hardened web server for Robotics & Control Ltd with OWASP Top 10 protection",
  "main": "server.js",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/robotics-control-ltd/security-server.git"
  },
  "author": "Robotics & Control Ltd Security Team",
  "license": "MIT",
  "scripts": {
    "test": "npm run security:ci:gate && echo \"All tests passed\"",
    "start": "node server.js",
    "dev": "NODE_ENV=development node server.js",
    "prod": "NODE_ENV=production node server.js",
    "_comment_security_dev": "=== Local Development Security Scripts (Non-blocking) ===",
    "security:scan": "node -e \"const { VulnerabilityScanner } = require('./lib/vulnerability-scanner'); const scanner = new VulnerabilityScanner(); scanner.runFullScan().then(r => { console.log('Local scan completed - Non-blocking for development'); console.log('Critical:', r.summary.critical, 'High:', r.summary.high); }).catch(console.error);\"",
    "security:audit": "npm audit --audit-level=moderate",
    "security:audit:fix": "npm audit fix",
    "security:audit:better": "npx better-npm-audit audit",
    "security:report": "node -e \"const { SecurityReporter } = require('./lib/security-reporter'); const { VulnerabilityScanner } = require('./lib/vulnerability-scanner'); const { SecurityMonitor } = require('./lib/security-monitor'); const vs = new VulnerabilityScanner(); const sm = new SecurityMonitor(); const sr = new SecurityReporter(vs, sm); sr.generateSecurityReport().then(console.log).catch(console.error);\"",
    "security:dashboard": "node -e \"const { SecurityReporter } = require('./lib/security-reporter'); const { VulnerabilityScanner } = require('./lib/vulnerability-scanner'); const { SecurityMonitor } = require('./lib/security-monitor'); const vs = new VulnerabilityScanner(); const sm = new SecurityMonitor(); const sr = new SecurityReporter(vs, sm); sr.generateSecurityReport({formats: ['html']}).then(r => console.log('Dashboard generated:', r.id)).catch(console.error);\"",
    "security:monitor": "node -e \"console.log('Security monitoring is integrated into the main server. Start with: npm start')\"",
    "_comment_security_ci": "=== CI/CD Pipeline Security Scripts (Build-breaking) ===",
    "security:ci:gate": "npx audit-ci --config audit-ci.json",
    "security:ci:critical-only": "npx audit-ci --critical",
    "security:ci:high-and-critical": "npx audit-ci --high --critical",
    "security:ci:report": "npm run security:scan && npm run security:report",
    "security:ci:full": "npm run security:ci:gate && npm run security:ci:report",
    "_comment_security_testing": "=== Security Testing and Validation ===",
    "security:test": "node -e \"console.log('=== Security System Test ==='); const { VulnerabilityScanner } = require('./lib/vulnerability-scanner'); const { SecurityMonitor } = require('./lib/security-monitor'); console.log('VulnerabilityScanner: OK'); console.log('SecurityMonitor: OK'); console.log('Security system test completed successfully');\"",
    "security:test:load": "node load-test.js",
    "security:test:performance": "node -e \"console.log('Running performance test...'); const startTime = Date.now(); require('./server.js'); setTimeout(() => { const duration = Date.now() - startTime; console.log('Server startup time:', duration + 'ms'); process.exit(0); }, 1000);\"",
    "_comment_security_maintenance": "=== Security Maintenance ===",
    "security:check": "npm run security:audit && npm run security:scan",
    "security:update": "npm audit fix && npm update",
    "security:status": "curl -s http://localhost:5000/api/security/jobs/status | json_pp || echo 'Server not running - start with npm start'"
  },
  "keywords": [
    "security",
    "robotics",
    "enterprise",
    "owasp",
    "express",
    "server"
  ],
  "private": true,
  "dependencies": {
    "audit-ci": "7.1.0",
    "bcrypt": "6.0.0",
    "better-npm-audit": "3.11.0",
    "compression": "1.8.1",
    "cookie-parser": "1.4.7",
    "cors": "2.8.5",
    "crypto-js": "4.2.0",
    "dompurify": "3.2.6",
    "dotenv": "17.2.2",
    "escape-html": "1.0.3",
    "eslint": "^9.36.0",
    "express": "5.1.0",
    "express-rate-limit": "8.1.0",
    "express-slow-down": "3.0.0",
    "express-validator": "7.2.1",
    "fast-csv": "5.0.5",
    "fs-extra": "11.3.1",
    "glob": "^11.0.3",
    "helmet": "8.1.0",
    "htmlhint": "^1.7.1",
    "jsdom": "27.0.0",
    "jsonwebtoken": "9.0.2",
    "morgan": "1.10.1",
    "node-cron": "4.2.1",
    "openai": "5.20.2",
    "qrcode": "1.5.4",
    "speakeasy": "2.0.0",
    "stylelint": "^16.24.0",
    "stylelint-config-standard": "^39.0.0",
    "uuid": "13.0.0",
    "validator": "13.15.15",
    "xss": "1.0.15"
  },
  "security": {
    "advisories": {
      "enabled": true
    },
    "auditLevel": "moderate"
  },
  "os": [
    "linux",
    "darwin",
    "win32"
  ],
  "cpu": [
    "x64",
    "arm64"
  ],
  "devDependencies": {
    "@eslint/js": "^9.36.0",
    "eslint-formatter-table": "^7.32.1",
    "globals": "^16.4.0"
  }
}
